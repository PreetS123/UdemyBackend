 1) What is NodeJS?
 Ans:- NodeJS is a runtime environment for server side and networking application.
       Node.js is an open source fromework.
       Node.js can run on cross platfom i.e it can run on windows linux mac etc.
       Node.js was built on top of Chrome's javaScript runtime, the V8 engine.
       Node.js application are written in javaScript.
       Node.js is a lightweight.


 2) Who are using node.js 
 Yahoo,Netflix, Paypal, Uber, LinledIn , ebay, google, trello, gitHub, Walmart


3) What is npm?
 Ans:- Nodes pacakage managers
      Npm is known as online repository for publishing node.js projects.
      NPM is a command line utility for installing and interacting with packages and module.
      NPM is also used to manage packages.
      NPM makes it easy for developers to update, share and reuse code.
      . To check the current version of npm command line is : npm --v.
      . To install current version of npm command line is : npm install npm@latest -g

 Basic command line used 
  npm i <pacakage name> -g ---> installing package locally or globally.
  npm ininstall <pacakage> -g ---> uninstall local or global pacakage.
  npm search <package name>  ---> Search pacakage
  npm ls -g --> list local or global pacakages.
  npm update -g --> update local or global packages.


 4) What is global objects
   These are objects that are available in all modules.

     Global Object                | Description
     Class:Buffer                 | Used to handle binary data.
     __dirname                    | Directory name of the current module.
     __filename                   | File name of the current module.
     clearImmediate(immediateObject)| Cancels an Immediate object.
     console                      | Prints to console
     exports                      | A refference to the module.exports
     require()                    | To require modules

 
 5) Difference between Synchronous and Asynchronous Task
   
    Synchronous task blocks a process till the previous task completes.
    Asynchronous task is non-blocking and can start any task.


    AJAX--> asynchronous JavaScript xml


6) What are events?
  Events are things that happen
  Examples:
    . Input field entry
    . Button Click
    . Door opening
    . Opening google chorome

 7) What are Emitters?
   Ans:- Emitters are objects that emit events
    that cause function objects listeners to be called
    Example:
    fs.readStreams emits an event when the file is opened.
    stream emits an events whenever data is available to be read.

Things to note:
All objects that emits events are instances of the EventEmitter class.

eventEmitter.on() function allows one or more functions to be attached
 to named events emitted by the objects.

 event names are camel-cased string but any valid javaScript property 
 key can be used.

  8) What are callbacks ?
   Ans:- callbacks are a kind of asynchronous equivalent of a function called when a task completes.
         callbacks prevents blocking and allows other code to run.

 9) Components of a Node.js application
    a) Import require modules=> var http=require('http');
    b) Create Server => http.createServer(function(request,response){})
    c) Read request and return response.
    d) Send a response headers : respnse.writeHead(200,{'content-type';"text/plain});
    e) Send the response body e.g as "hello world" response.end("Hello World\n");
    f) Port where application will run }.listen(8080);

 10) Modules and Packages
  Modules---> Modules are node.js libraries.
  Pacakage--> A pacakage is one or more modules grouped or packaged together.
  Every Node.js app is a package and should have package.json files.

  11)Gulp: Gulp is a toolkit for automating repetitive and time consuming tasks.
  

  Difference between RDMS vs MongoDB.

  RDBMS-->1) In a RDBMS we have tables
          2) In RDBMS tables have column
          3)Value
          4)It is in form of record or row.
          5) Predefined Schema
  
  MongoDB-->1)In MongoDB we have collections
            2)In MongoDB collection have key
            3)Value
            4)It is in form of Document or Object.
            5) Schemas are flexible.


